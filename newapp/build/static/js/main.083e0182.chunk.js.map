{"version":3,"sources":["components/Summary/Summary.js","components/Summary/Summary2.js","components/Summary/Summary3.js","components/Summary/Summary4.js","components/Buttons/Buttons.js","components/ButtonOne/ButtonOne.js","App.js","serviceWorker.js","index.js"],"names":["Summary","props","className","Summary2","onClick","window","open","Summary3","Summary4","Buttons","href","ButtonOne","App","state","visible","path","exact","component","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.083e0182.chunk.js","sourcesContent":["import React from 'react';\nimport './Summary.css'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\n\nconst Summary = (props) => {\n  return (\n    <div className=\"Summary1\">\n    <nav className = 'paragraph'>\n  <p>\n  Here at CloudWhich.com, we provide you with a nonbiased opinion\n  of the most popular cloud service providers in the industry. This includes\n  AWS, Azure, and Google Cloud Platform. Please browse the site to learn more!</p>\n  </nav>\n  </div>\n)\n}\n\n\n\nexport default Summary;\n","import React from 'react';\nimport './Summary.css'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nconst Summary2 = (props) => {\n  return (\n    <div className=\"Summary\">\n\n    <h1 className = 'AWSh'>Amazon</h1>\n  <p>In 2006, AWS started to offer their Infrastructure as a Service platform\n  to many businesses around the world. This quickly became known as Cloud computing.\n  AWS currently holds 33% of the\n  worldwide market share for cloud service providers.</p>\n  <p>Whether its hosting a static website, having globally redundant storage, or spinning up thousands of\n  servers for your business application, AWS is the platform for you.</p>\n  <p>As a holder of the AWS Certified Solutions Architect Certification, I can vouch for all of the\n  hype that surrounds AWS services. One of my favorite things about the AWS platform is the ease of navigating\n  and creating through the console. AWS makes it very easy to quickly spin up resources while ensuring that\n  they are secure.</p>\n\n<nav className ='cnt'>\n<h1 className = 'resourcetitle'>Resources</h1>\n<ul className= \"lglist\">\n  <li><a onClick={()=> window.open('https://aws.amazon.com/ec2/faqs/')}>EC2</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/s3/faqs/')}>S3</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/vpc/faqs/')}>VPC</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/ebs/faqs/')}>EBS</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/cloudfront/faqs/')}>CloudFront</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/lambda/faqs/')}>Lambda</a></li>\n  <li><a onClick={()=> window.open('https://aws.amazon.com/iam/faqs/')}>IAM</a></li>\n\n\n</ul>\n</nav>\n  </div>\n\n\n)\n}\n\n\n\nexport default Summary2;\n","import React from 'react';\nimport './Summary.css'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nconst Summary3 = (props) => {\n  return (\n    <div className=\"Summary\">\n    <h1 className = 'AWSh'>Azure</h1>\n    <p>Azure was initally launched in February 2010 as \"Windows Azure\". It was then\n    renamed to \"Microsoft Azure\" in March of 2014. Azure currently holds 18% of the\n    worldwide market share for cloud service providers.</p>\n    <p>Many companies that are deciding to move their on-premise infrastructure to the cloud\n    are already committed to a number of Microsoft products. Azure makes it very easy for these companies\n    to migrate.</p>\n    <p>As a holder of the Microsoft Azure Fundamentals certification, I can say that the Azure Platform\n    has made it easy for enterprise businesses to setup or migrate their IT infrastructure onto the platform.\n    One of my favorite things about the Azure platform is the hierarchical structure to navigate\n    between resources, Active Directory groups, etc.</p>\n\n<nav className ='cnt'>\n<h1 className = 'resourcetitle'>Resources</h1>\n<ul className= \"lglist\">\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/virtual-machines/windows/overview')}>VM</a></li>\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview')}>Storage Account</a></li>\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview')}>Vnet</a></li>\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/application-gateway/overview')}>Application Gateway</a></li>\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview')}>Functions</a></li>\n<li><a onClick={()=> window.open('https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-ops-guide-iam')}>IAM</a></li>\n\n\n</ul>\n</nav>\n  </div>\n\n\n)\n}\n\n\n\nexport default Summary3;\n","import React from 'react';\nimport './Summary.css'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nconst Summary4 = (props) => {\n  return (\n    <div className=\"Summary\">\n    <h1 className = 'AWSh'>Google</h1>\n    <p>Google Cloud Platform was initally launched in April 2008. It currently holds 8% of the\n    worldwide market share for cloud service providers.</p>\n    <p>A lot of companies these days struggle with migrating an application to the cloud that has already been\n    written. Google Cloud Platform makes it easy to run these applications on-premise and in the cloud\n    with no change in infrastructure.</p>\n\n\n<nav className ='cnt'>\n<h1 className = 'resourcetitle'>Resources</h1>\n<ul className= \"lglist\">\n  <li><a onClick={()=> window.open('https://cloud.google.com/compute/docs')}>Compute Engine</a></li>\n  <li><a onClick={()=> window.open('https://cloud.google.com/storage/docs')}>Cloud Storage</a></li>\n  <li><a onClick={()=> window.open('https://cloud.google.com/vpc/docs/vpc')}>VPC</a></li>\n  <li><a onClick={()=> window.open('https://cloud.google.com/load-balancing/docs')}>Load Balancer</a></li>\n  <li><a onClick={()=> window.open('https://cloud.google.com/functions/docs')}>Cloud Functions</a></li>\n  <li><a onClick={()=> window.open('https://cloud.google.com/iam/docs')}>IAM</a></li>\n\n\n</ul>\n</nav>\n  </div>\n\n\n)\n}\n\n\n\nexport default Summary4;\n","import React from 'react';\nimport './Buttons.css'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\n\n\n\n\n\n\n\n\nconst Buttons = (props) => {\n  return (\n\n<div className = 'buttn'>\n<a className = \"first\" href = \"/Summary/Summary2\">AWS</a>\n<a className = \"second\" href = \"/Summary/Summary3\">Azure</a>\n<a className = \"third\" href = \"/Summary/Summary4\">Google</a>\n\n</div>\n)\n}\n\n\nexport default Buttons;\n","import React from 'react';\nimport './ButtonOne.css'\nimport Buttons from '../Buttons/Buttons'\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\n\n\n\n\n\n\n\n\nconst ButtonOne = (props) => {\n  return (\n\n<div className = 'buttonone'>\n<a className = \"One\" href = '/Buttons'>Which Cloud?</a>\n\n\n</div>\n)\n}\n\n\nexport default ButtonOne;\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Summary from './components/Summary/Summary';\nimport Summary2 from './components/Summary/Summary2';\nimport Summary3 from './components/Summary/Summary3';\nimport Summary4 from './components/Summary/Summary4';\nimport Buttons from './components/Buttons/Buttons';\nimport ButtonOne from './components/ButtonOne/ButtonOne';\n\n\nclass App extends Component {\n  state = {\n    visible: true\n  };\n\n\n\n\n  //clickHandle = () => {\n  //display('none');\n  //}\n\n\n  render(){\n    const style = {\n      padding: '20px'\n    }\n\n\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n\n    <header>\n      <nav>\n        <ul className = \"menu\">\n          <li className = 'mainmenu'><a className = 'menufont' href = \"/\">Home</a></li>\n          <li className = 'mainmenu'><a className = 'menufont' href = \"/Summary\">About</a></li>\n          <li className = 'mainmenu'><a  className = 'menufont' href = \"/\">Clouds</a></li>\n          <li className = 'mainmenu'><a className = 'menufont' href = \"https://github.com/terrenceoconnor57/WebsiteRepo\">GitHub</a></li>\n        </ul>\n      </nav>\n    </header>\n\n    <h1 className = \"title\">CloudWhich.com</h1>\n        <h2>Which cloud is for you?</h2>\n\n    <br/>\n    <br/>\n    <nav className = 'nav'>\n    <Route path = \"/Summary\" exact component={Summary} />\n    <Route path = \"/Summary/Summary2\" exact component={Summary2} />\n    <Route path = \"/Summary/Summary3\" exact component={Summary3} />\n    <Route path = \"/Summary/Summary4\" exact component={Summary4} />\n</nav>\n\n\n    </div>\n    <Route path = \"/\" exact component={Buttons} />\n\n    <Route path = \"/ButtonOne\" exact component={ButtonOne} />\n\n</BrowserRouter>\n\n\n\n  );\n\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport \"react-app-polyfill/stable\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}